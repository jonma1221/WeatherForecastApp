apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.weatherforecastapp"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            it.buildConfigField 'String', 'WeatherApiKey', WeatherApiKey
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libraries.support}"
    implementation "com.android.support.constraint:constraint-layout:${libraries.constraint}"

    // butterknife
    implementation "com.jakewharton:butterknife:${libraries.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libraries.butterknife}"

    //image loading
    implementation "com.github.bumptech.glide:glide:${libraries.glide}"

    //parsing
    implementation "com.google.code.gson:gson:${libraries.gson}"

    //networking
    implementation "com.squareup.retrofit2:retrofit:${libraries.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${libraries.retrofitConvertor}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libraries.retrofitLogger}"

    //Testing
    testImplementation "junit:junit:${libraries.junit}"
    testImplementation "org.mockito:mockito-core:2.2.1"
    androidTestImplementation "com.android.support.test:runner:${libraries.runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libraries.expresso}"
}
